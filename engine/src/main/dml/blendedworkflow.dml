package pt.ist.socialsoftware.blendedworkflow.domain;

enum pt.ist.socialsoftware.blendedworkflow.domain.DataModel.DataState as DataState;
enum pt.ist.socialsoftware.blendedworkflow.domain.OldMaintainGoal.MaintainGoalState as MaintainGoalState;
//enum pt.ist.socialsoftware.blendedworkflow.domain.OldWorkItem.WorkItemState as WorkItemState;
enum pt.ist.socialsoftware.blendedworkflow.domain.OldTaskWorkItem.ActivityState as ActivityState;
enum pt.ist.socialsoftware.blendedworkflow.domain.OldGoalWorkItem.GoalState as GoalState;
enum pt.ist.socialsoftware.blendedworkflow.domain.Attribute.AttributeType as AttributeType;
enum pt.ist.socialsoftware.blendedworkflow.domain.RelationBW.Cardinality as Cardinality;
enum pt.ist.socialsoftware.blendedworkflow.domain.Comparison.ComparisonOperator as ComparisonOperator;
enum pt.ist.socialsoftware.blendedworkflow.domain.BinaryExpression.BinaryOperator as BinaryOperator;

class BlendedWorkflow {
	Integer specificationCounter;
}

relation DomainRootHasBlendedWorkflowApplication {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 1..1;
	}
	BlendedWorkflow playsRole blendedWorkflow {
		multiplicity 0..1;
	}
}

class OrganizationalModel;

class Role {
	String name;
	String description;
	Boolean bwManagerAcess;
	Boolean organizationalManagerAcess;
	Boolean worklistManagerAcess;
}

class User {
	String name;
	String ID;
	String password;
	String notes;
}

class Specification {
  String specId;
	String name;
	String author;
	String description;
	String creationDate;
	String yawlSpecficationID;
	Integer instanceCounter;
	String UID;
	String version;
}

class DataModel;

class OldDataModelInstance extends DataModel;

class Product {
	String name;
}

class Entity extends Product {
	boolean exists;
	Integer entityInstanceCounter;
}

class Attribute extends Product {
	boolean isMandatory;
	AttributeType type;
	boolean isKeyAttribute;
	boolean isSystem;
}

class Path {
	String value;
}

class Dependence;

class RelationBW {
	String name;
	String roleNameOne;
	String roleNameTwo;
	Cardinality cardinalityOne;
	Cardinality cardinalityTwo;
	boolean isOneKeyEntity;
	boolean isTwoKeyEntity;
}

class Rule {
	String name;
}

class Expression;

class BinaryExpression extends Expression {
	BinaryOperator operator;
}

class AttributeValueExpression extends Expression;

class NumberLiteral extends Expression {
	int value;
}

class StringLiteral extends Expression {
	String valueString;
}

class OldBWInstance {
	String ID;
	String name;
	String creationDate;
	String yawlCaseID;
	Integer workItemCounter;
}

class Log;

class LogRecord {
	String date;
	String value;
	String action;
	String author;
}

class ConditionModel;

class OldWorkItem {
	String ID;
//	WorkItemState stateDELETE;
}

class OldTaskWorkItem extends OldWorkItem {
	ActivityState state;
}

class OldGoalWorkItem extends OldWorkItem {
	GoalState state;
}

class OldWorkItemArgument {
	String value;
	DataState state;
}

class GoalModel;

class OldGoalModelInstance extends GoalModel;

class Goal {
	String name;
	String description;
}

class OldMaintainGoal {
	String name;
	String description;
	MaintainGoalState state;
}

class ActivityModel;

class OldTaskModelInstance extends ActivityModel;

class Activity {
	String name;
	String description;
	String previous;
	String joinCode;
	String splitCode;
}

class Condition;

class AndCondition extends Condition;

class OrCondition extends Condition;

class NotCondition extends Condition;

class DefProductCondition extends Condition;

class DefEntityCondition extends DefProductCondition;

class DefAttributeCondition extends DefProductCondition;

class DefPathCondition extends DefProductCondition;

class MulCondition extends Condition {
	int side;
}

class Comparison extends Condition {
	ComparisonOperator comparator;
	String operator;
	String value;
}

class BoolComparison extends Condition {
	ComparisonOperator comparator;
}

class AttributeBoolCondition extends Condition;

class TrueCondition extends Condition;

class FalseCondition extends Condition;

class OldForAllCondition extends Condition;
class OldExistsOneCondition extends Condition;

class OldEntityInstance {
	String ID;
	DataState state;
	Integer attributeInstanceCounter;
	Integer relationInstanceCounter;
}

class OldAttributeInstance {
	String ID;
	String value;
	DataState state;
}

class OldRelationInstance {
	String ID;
}

class WorkflowInstance {
	String name;
}

class EntityInstance;

class AttributeInstance {
	String value;
}

class RelationInstance;

// BlendedWorkflow
relation BlendedWorkflowHasSpecifications {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	Specification playsRole specification {multiplicity 0..*;}
}

// Specification
relation SpecificationHasBWInstances {
	Specification playsRole specification {multiplicity 0..1;}
	OldBWInstance playsRole oldBwInstances {multiplicity 0..*;}
}

relation SpecificationHasWorkflowInstances {
	Specification playsRole specification {multiplicity 0..1;}
	WorkflowInstance playsRole workflowInstance {multiplicity 0..*;}
}

relation SpecificationHasConditionModel {
	Specification playsRole specification {multiplicity 0..1;}
	ConditionModel playsRole conditionModel { multiplicity 0..1;}
}

relation SpecificationHasGoalModel {
	Specification playsRole specification {multiplicity 0..1;}
	GoalModel playsRole goalModel { multiplicity 0..1; }
}

relation SpecificationHasActivityModel {
	Specification playsRole specification {multiplicity 0..1;}
	ActivityModel playsRole activityModel { multiplicity 0..1; }
}

relation SpecificationHasDataModel {
	Specification playsRole specification {multiplicity 0..1;}
	DataModel playsRole dataModel { multiplicity 0..1; }
}

// WorkflowInstance
relation WorkflowInstanceHasEntityInstances {
	WorkflowInstance playsRole workflowInstance {multiplicity 0..1;}
	EntityInstance playsRole entityInstance {multiplicity 0..*;}
}

// OldBWInstance
relation BWInstanceHasGoalModelInstance {
	OldBWInstance playsRole bwInstance {multiplicity 0..1;}
	OldGoalModelInstance playsRole goalModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasTaskModelInstance {
	OldBWInstance playsRole bwInstance {multiplicity 0..1;}
	OldTaskModelInstance playsRole taskModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasDataModelInstance {
	OldBWInstance playsRole bwInstance {multiplicity 0..1;}
	OldDataModelInstance playsRole dataModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasWorkItems {
	OldBWInstance playsRole bwInstance {multiplicity 0..1;}
	OldWorkItem playsRole workItems {multiplicity 0..*;}
}

// Log
relation SpecificationHasLog {
	Specification playsRole specification {multiplicity 0..1;}
	Log playsRole log {multiplicity 0..1;}
}

relation BWInstanceHasLog {
	OldBWInstance playsRole bwInstance {multiplicity 0..1;}
	Log playsRole log {multiplicity 0..1;}
}

relation LogHasLogRecords {
	Log playsRole log {multiplicity 0..1;}
	LogRecord playsRole logRecords {multiplicity 0..*;}
}

// ConditionModel
relation ConditionModelHasEntityAchieveConditions {
	ConditionModel playsRole conditionModel {multiplicity 0..1;}
  	DefEntityCondition playsRole entityAchieveCondition {multiplicity 0..*;}
}

relation ConditionModelHasEntityDependenceConditions {
	ConditionModel playsRole conditionModelForEntDep {multiplicity 0..1;}
	Dependence playsRole entityDependenceCondition {multiplicity 0..*;}
}

relation ConditionModelHasEntityInvariantConditions {
	ConditionModel playsRole conditionModel {multiplicity 0..1;}
	MulCondition playsRole entityInvariantCondition {multiplicity 0..*;}
}

relation ConditionModelHasAttributeAchieveConditions {
	ConditionModel playsRole conditionModel {multiplicity 0..1;}
	DefAttributeCondition playsRole attributeAchieveCondition {multiplicity 0..*;}
}

relation ConditionModelHasAttributeDependenceConditions {
	ConditionModel playsRole conditionModelForAttDep {multiplicity 0..1;}
	Dependence playsRole attributeDependenceCondition {multiplicity 0..*;}
}

relation ConditionModelHasAttributeInvariantConditions {
	ConditionModel playsRole conditionModel {multiplicity 0..1;}
	Rule playsRole attributeInvariantCondition {multiplicity 0..*;}
}


// OldWorkItem
relation WorkItemRefersToOutputAttributeInstances {
	OldWorkItem playsRole contraintViolationWorkItems {multiplicity 0..*;}
	OldAttributeInstance playsRole outputAttributeInstances { multiplicity 0..*; }
}

relation WorkItemRefersInputAttributteInstances {
	OldWorkItem playsRole preConstraintWorkItems {multiplicity 0..*;}
	OldAttributeInstance playsRole inputAttributeInstances { multiplicity 0..*; }
}

// OldWorkItemArgument
relation WorkItemHasInputWorkItemArguments {
	OldWorkItem playsRole inputWorkItem {multiplicity 0..1;}
	OldWorkItemArgument playsRole inputWorkItemArguments { multiplicity 0..*; }
}

relation WorkItemHasOutputWorkItemArguments {
	OldWorkItem playsRole outputWorkItem {multiplicity 0..1;}
	OldWorkItemArgument playsRole outputWorkItemArguments { multiplicity 0..*; }
}

relation WorkItemArgumentRefersAttributteInstances {
	OldWorkItemArgument playsRole workItemArgument {multiplicity 0..*;}
	OldAttributeInstance playsRole attributeInstance { multiplicity 0..1; }
}

// Goal Model
relation GoalModelHasGoals {
	GoalModel playsRole goalModel { multiplicity 0..1; }
	Goal playsRole goal { multiplicity 0..*; }
}

relation GoalModelHasMaintainGoals {
	GoalModel playsRole goalModel { multiplicity 0..1; }
	OldMaintainGoal playsRole maintainGoals { multiplicity 0..*; }
}

// Goal
relation GoalHasGoals {
	Goal playsRole parentGoal { multiplicity 0..1; }
	Goal playsRole subGoal { multiplicity 0..*; }
}

relation GoalHasSucessConditions {
	Goal playsRole successConditionGoal { multiplicity 0..1; }
	DefProductCondition playsRole successCondition { multiplicity 0..*; }
}

relation GoalHasActivationConditions {
	Goal playsRole activationConditionGoal {multiplicity 0..*;}
	DefPathCondition playsRole activationCondition {multiplicity 0..*;}
}

relation GoalHasEntityInvariantCondition {
	Goal playsRole invariantConditionGoal {multiplicity 0..1;}
	MulCondition playsRole entityInvariantCondition {multiplicity 0..*;}
}

relation GoalHasAttributeInvariantCondition {
	Goal playsRole invariantConditionGoal {multiplicity 0..1;}
	Rule playsRole attributeInvariantCondition {multiplicity 0..*;}
}

relation GoalHasGoalWorkItem {
	Goal playsRole goal { multiplicity 0..1; }
	OldGoalWorkItem playsRole oldGoalWorkItem { multiplicity 0..*; }
}

// Activity Model
relation ActivityModelHasActivities {
	ActivityModel playsRole activityModel { multiplicity 0..1; }
	Activity playsRole activity { multiplicity 0..*; }
}

// Activity
relation ActivityHasNextActivity {
	Activity playsRole activity { multiplicity 0..*; }
	Activity playsRole nextActivity { multiplicity 0..*; }
}

relation ActivityHasPreConditions {
	Activity playsRole activityWithPreCondition { multiplicity 0..*; }
	DefPathCondition playsRole preCondition { multiplicity 0..*; }
}

relation ActivityHasPostConditions {
	Activity playsRole activityWithPostCondition { multiplicity 0..1; }
	DefProductCondition playsRole postCondition { multiplicity 0..*; }
}

relation ActivityHasMultiplicityInvariants {
	Activity playsRole activityWithMultiplicity { multiplicity 0..1; }
	MulCondition playsRole multiplicityInvariant { multiplicity 0..*; }
}

relation ActivityHasRuleInvariants {
	Activity playsRole activityWithRule { multiplicity 0..*; }
	Rule playsRole ruleInvariant { multiplicity 0..*; }
}

relation ActivityHasSequenceConditions {
	Activity playsRole activitySequenceCondition { multiplicity 0..1; }
	DefPathCondition playsRole sequenceCondition { multiplicity 0..*; }
}

relation ActivityHasTaskWorkItem {
	Activity playsRole task { multiplicity 0..1; }
	OldTaskWorkItem playsRole oldTaskWorkItem { multiplicity 0..1; }
}

// DataModel
relation DataModelHasEntities {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Entity playsRole entity { multiplicity 0..*; }
}

relation DataModelHasAttributes {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..*; }
}

relation DataModelHasDefPathConditions {
	DataModel playsRole dataModel {multiplicity 0..1;}
	DefPathCondition playsRole defPathCondition {multiplicity 0..*;}
}

relation DataModelHasRelationBW {
	DataModel playsRole dataModel { multiplicity 0..1; }
	RelationBW playsRole relationBW { multiplicity 0..*; }
}

relation DataModelHasDependence {
	DataModel playsRole dataModel { multiplicity 1..1; }
	Dependence playsRole dependence { multiplicity 0..*; }
}

relation DataModelHasPath {
	DataModel playsRole dataModel { multiplicity 1..1; }
	Path playsRole path { multiplicity 0..*; }
}

// Product
relation ProductHasDependence {
	Product playsRole product { multiplicity 0..1; }
	Dependence playsRole dependence { multiplicity 0..*; }
}

// Entity
relation EntityHasAttributes {
	Entity playsRole entity { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..*; }
}

relation EntityHasRule {
	Entity playsRole entity { multiplicity 1..1; }
	Rule playsRole rule { multiplicity 0..*; }
}

relation EntityHasOldEntityInstances {
	Entity playsRole entity { multiplicity 0..1; }
	OldEntityInstance playsRole oldEntityInstance { multiplicity 0..*; }
}

relation EntityHasEntityInstances {
	Entity playsRole entity { multiplicity 0..1; }
	EntityInstance playsRole entityInstance { multiplicity 0..*; }
}

// RelationBW
relation RelationBWHasRelationInstances {
	RelationBW playsRole relationType { multiplicity 0..1; } 
	RelationInstance playsRole RelationInstance { multiplicity 0..*; }
}

relation RelationBWHasOldRelationInstances {
	RelationBW playsRole relationType { multiplicity 0..1; } //FIXME relation
	OldRelationInstance playsRole oldRelationInstance { multiplicity 0..*; }
}

// Attributes
relation AttributeHasOldAttributeInstances {
	Attribute playsRole attribute { multiplicity 0..1; }
	OldAttributeInstance playsRole oldAttributeInstance { multiplicity 0..*; }
}

relation AttributeHasAttributeInstances {
	Attribute playsRole attribute { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstance { multiplicity 0..*; }
}

// Path
relation DependenceHasPath {
	Dependence playsRole dependence { multiplicity 0..1; }
	Path playsRole path { multiplicity 1..1; }
}

relation AttributeBoolConditionHasPath {
	AttributeBoolCondition playsRole attributeBoolCondition { multiplicity 0..1; }
	Path playsRole path { multiplicity 1..1; }
}

relation AttributeValueExpressionHasPath {
	AttributeValueExpression playsRole attributeValueExpression { multiplicity 0..1; }
	Path playsRole path { multiplicity 1..1; }
}

relation DefProductConditionHasPath {
	DefProductCondition playsRole defProductCondition { multiplicity 0..1; }
	Path playsRole path { multiplicity 1..1; }
}

// Rule
relation RuleHasCondition {
	Rule playsRole rule { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 1..1; }
}

// OldEntityInstance
relation EntityInstanceHasOldAttributeInstances {
	OldEntityInstance playsRole entityInstance { multiplicity 0..1; }
	OldAttributeInstance playsRole attributeInstances { multiplicity 0..*; }
}

// Relation
relation RelationBWHasEntityOne {
	RelationBW playsRole relationOne { multiplicity 0..*; }
	Entity playsRole entityOne { multiplicity 1..1; }
}

relation RelationBWHasEntityTwo {
	RelationBW playsRole relationTwo { multiplicity 0..*; }
	Entity playsRole entityTwo { multiplicity 1..1; }
}

/*
relation EntityInstanceMayHaveRelationInstances {
	OldEntityInstance playsRole entityInstances { multiplicity 0..*; } //FIXME 0..2
	OldRelationInstance playsRole relationInstances { multiplicity 0..*; }
}*/

//NEW
/*
relation EntityMayBeRelationEntityOne {
	Entity playsRole entityOne { multiplicity 0..1; }
	RelationBW playsRole entityOneRelationInstances { multiplicity 0..*; }
}

relation EntityMayBeRelationEntityTwo {
	Entity playsRole entityTwo { multiplicity 0..1; }
	RelationBW playsRole entityTwoRelationInstances { multiplicity 0..*; }
}*/

relation EntityInstanceMayBeRelationEntityOne {
	EntityInstance playsRole entityInstanceOne { multiplicity 0..1; }
	RelationInstance playsRole entityInstanceOneRelationInstances { multiplicity 0..*; }
}

relation EntityInstanceMayBeRelationEntityTwo {
	EntityInstance playsRole entityInstanceTwo { multiplicity 0..1; }
	RelationInstance playsRole entityInstanceTwoRelationInstances { multiplicity 0..*; }
}

relation EntityInstanceMayBeOldRelationEntityOne {
	OldEntityInstance playsRole entityInstanceOne { multiplicity 0..1; }
	OldRelationInstance playsRole entityInstanceOneRelationInstances { multiplicity 0..*; }
}

relation EntityInstanceMayBeOldRelationEntityTwo {
	OldEntityInstance playsRole entityInstanceTwo { multiplicity 0..1; }
	OldRelationInstance playsRole entityInstanceTwoRelationInstances { multiplicity 0..*; }
}

// EntityInstance
relation EntityInstanceHasAttributeInstances {
	EntityInstance playsRole entityInstance { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstance { multiplicity 0..*; }
}





// Conditions
// AndCondition
relation AndConditionHasLeftConditions {
	AndCondition playsRole andLeftCondition { multiplicity 0..1; }
	Condition playsRole leftCondition { multiplicity 0..1; }
}

relation AndConditionHasRightConditions {
	AndCondition playsRole andRightCondition { multiplicity 0..1; }
	Condition playsRole rightCondition { multiplicity 0..1; }
}

// OrCondition
relation OrConditionHasLeftConditions {
	OrCondition playsRole orLeftCondition { multiplicity 0..1; }
	Condition playsRole leftCondition { multiplicity 0..1; } 
}

relation OrConditionHasRightConditions {
	OrCondition playsRole orRightCondition { multiplicity 0..1; }
	Condition playsRole rightCondition { multiplicity 0..1; } 
}

// NotCondition
relation NotConditionHasConditions {
	NotCondition playsRole notCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

//DefEntityCondition
relation DefEntityConditionHasEntity {
	DefEntityCondition playsRole defEntityCondition { multiplicity 0..1; }
	Entity playsRole entity { multiplicity 0..1; }
}

// DefAttributeCondition
relation DefAttributeConditionHasAttribute {
	DefAttributeCondition playsRole defAttributeCondition { multiplicity 0..1; }
	Attribute playsRole attributeOfDef { multiplicity 0..1; }
}

//MulCondition
relation MulConditionHasRelationBW {
	MulCondition playsRole mulCondition { multiplicity 0..2;}
	RelationBW playsRole relationBW { multiplicity 0..1; }
}

// Comparison
relation ComparisonHasAttribute {
	Comparison playsRole comparison { multiplicity 0..*; }
	Attribute playsRole attributeOfComparison { multiplicity 0..1; }
}

relation ComparisonHasExpressionLeft {
	Comparison playsRole leftComparison { multiplicity 0..1; }
	Expression playsRole leftExpression { multiplicity 0..1; }
}

relation ComparisonHasExpressionRight {
	Comparison playsRole rightComparison { multiplicity 0..1; }
	Expression playsRole rightExpression { multiplicity 0..1; }
}

// BoolComparison
relation ComparisonHasConditionLeft {
	BoolComparison playsRole leftBoolComparison { multiplicity 0..1; }
	Condition playsRole leftCondition { multiplicity 0..1; }
}

relation ComparisonHasConditionRight {
	BoolComparison playsRole rightBoolComparison { multiplicity 0..1; }
	Condition playsRole rightCondition { multiplicity 0..1; }
}

// AttributeBoolCondition
relation AttributeBoolConditionHasAttribute {
	AttributeBoolCondition playsRole attBoolCondition { multiplicity 0..*; }
	Attribute playsRole attributeOfBool { multiplicity 0..1; }
}

// BinaryExpression
relation BinaryExpressionHasExpressionLeft {
	BinaryExpression playsRole leftBinary { multiplicity 0..1; }
	Expression playsRole leftExpression { multiplicity 0..1; }
}

relation BinaryExpressionHasExpressionRight {
	BinaryExpression playsRole rightBinary { multiplicity 0..1; }
	Expression playsRole rightExpression { multiplicity 0..1; }
}

// AttributeValueExpression
relation AttributeValueExpressionHasAttribute {
	AttributeValueExpression playsRole attValueExpression { multiplicity 0..*; }
	Attribute playsRole attribute { multiplicity 0..1; }
}

//OrganizationalModel
relation BlendedWorkflowHasOrganizationalModel {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
}

relation OrganizationalModelHasRoles {
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
	Role playsRole roles {multiplicity 0..*;}
}

relation OrganizationalModelHasUsers {
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
	User playsRole users {multiplicity 0..*;}
}

relation BWInstanceHasUser {
	OldBWInstance playsRole bwInstance {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation UserHasRoles {
	User playsRole users {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation ActivityHasRoles {
	Activity playsRole activity {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation ActivityHasUsers {
	Activity playsRole activity {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation GoalHasRoles {
	Goal playsRole goal {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation GoalHasUsers {
	Goal playsRole goal {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation WorkItemHasRoles {
	OldWorkItem playsRole workItems {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation WorkItemHasUsers {
	OldWorkItem playsRole workItems {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

//NEWGoalModel Relations
relation GoalHasEntity {
	Goal playsRole goalContext {multiplicity 0..*;}
	Entity playsRole entityContext {multiplicity 0..1;}
}

relation MaintainGoalHasEntity {
	OldMaintainGoal playsRole maintainGoalContext {multiplicity 0..*;}
	Entity playsRole maintainGoalEntityContext {multiplicity 0..1;}
}

relation GoalWorkItemHasEntityInstances {
	OldGoalWorkItem playsRole goalWorkItemContext {multiplicity 0..*;}
	OldEntityInstance playsRole entityInstanceContext {multiplicity 0..1;}
}

relation MaintainGoalHasMaintainCondition {
	OldMaintainGoal playsRole maintainConditionAchieveGoal {multiplicity 0..1;}
	Condition playsRole maintainCondition {multiplicity 0..1;}
}

relation GoalWorkItemHasActivateCondition {
	OldGoalWorkItem playsRole oldActivateConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole activateConditions {multiplicity 0..*;}
}

relation GoalWorkItemHasMaintainConditions {
	OldGoalWorkItem playsRole oldMaintainConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole maintainConditions {multiplicity 0..*;}
}

relation GoalWorkItemHasSucessCondition {
	OldGoalWorkItem playsRole oldSucessConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole sucessCondition {multiplicity 0..1;}
}

//OldForAllCondition
relation ForAllConditionConditionHasCondition {
	OldForAllCondition playsRole forAllCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

//relation ForAllConditionConditionHasRelationRole {
//	OldForAllCondition playsRole forAllCondition { multiplicity 0..1; }
//	RelationRole playsRole relationRole { multiplicity 0..1; }
//}

relation ForAllConditionConditionConditionHasEntity {
	OldForAllCondition playsRole forAllCondition { multiplicity 0..*; }
	Entity playsRole forAllEntity { multiplicity 0..1; }
}

relation ForAllConditionConditionConditionHasRelationBW {
	OldForAllCondition playsRole forAllCondition { multiplicity 0..*; }
	RelationBW playsRole forAllRelation { multiplicity 0..1; }
}

//ExistsOne
relation ExistsOneConditionHasCondition {
	OldExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

relation ExistsOneConditionConditionHasEntity {
	OldExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	Entity playsRole existsOneEntity { multiplicity 0..1; }
}

relation ExistsOneConditionConditionHasRelationBW {
	OldExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	RelationBW playsRole existsOneRelation { multiplicity 0..1; }
}

//RelationRole
//relation RelationRoleHasRelationBW {
//	RelationRole playsRole relationRole {multiplicity 0..1;}
//	RelationBW playsRole relationRoleRelation {multiplicity 0..1;}
//}
//
//relation RelationRoleHasEntity {
//	RelationRole playsRole relationRole {multiplicity 0..1;}
//	Entity playsRole entity {multiplicity 0..1;}
//}

