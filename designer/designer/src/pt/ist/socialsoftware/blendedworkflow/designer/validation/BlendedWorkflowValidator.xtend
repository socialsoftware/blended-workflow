/*
 * generated by Xtext 2.12.0
 */
package pt.ist.socialsoftware.blendedworkflow.designer.validation

import org.eclipse.xtext.validation.CheckType
import org.eclipse.xtext.validation.Check
import pt.ist.socialsoftware.blendedworkflow.designer.blendedWorkflow.BWSpecification
import pt.ist.socialsoftware.blendedworkflow.designer.blendedWorkflow.Attribute
import pt.ist.socialsoftware.blendedworkflow.designer.blendedWorkflow.BlendedWorkflowPackage
import pt.ist.socialsoftware.blendedworkflow.designer.remote.WriteBlendedWorkflowService
import pt.ist.socialsoftware.blendedworkflow.designer.remote.repository.BWError
import pt.ist.socialsoftware.blendedworkflow.designer.remote.repository.BWNotification

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class BlendedWorkflowValidator extends AbstractBlendedWorkflowValidator {
	public static val INVALID_NAME = 'invalidName'
	
	@Check
	def checkModel(Attribute att) {
		if ((!att.type.equals("String")) && (!att.type.equals("Boolean")) && (!att.type.equals("Number")) &&
			(!att.type.equals("Date"))) {
			error("Invalid Data Type", BlendedWorkflowPackage.Literals.ATTRIBUTE__TYPE)
		}
	}

	@Check(CheckType.NORMAL)
	def checkModel(BWSpecification model) {
			//	info('everything OK 0', BlendedWorkflowPackage.Literals.BW_SPECIFICATION__SPECIFICATION)
		var instance = WriteBlendedWorkflowService.getInstance
			//	info('everything OK 2', BlendedWorkflowPackage.Literals.BW_SPECIFICATION__SPECIFICATION)
//		var specId = model.eResource.URI.lastSegment.split("\\.").get(0)
			//	info('everything OK 3', BlendedWorkflowPackage.Literals.BW_SPECIFICATION__SPECIFICATION)
		var BWNotification notification;
		try {
			notification = instance.write(model)
		} catch (Exception e) {
			System.err.println(e);
		}
			//	info('everything OK 4', BlendedWorkflowPackage.Literals.BW_SPECIFICATION__SPECIFICATION)
		if (notification.hasErrors)
			for (BWError error : notification.error)
				error(error.message, BlendedWorkflowPackage.Literals.BW_SPECIFICATION__SPECIFICATION,
					INVALID_NAME)
//		else
//			info('everything OK 2', BlendedWorkflowPackage.Literals.BW_SPECIFICATION__SPECIFICATION)
	}
	
}
